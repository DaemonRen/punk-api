{"version":3,"sources":["Components/Card/Card.jsx","Components/CardList/CardList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","beerName","beerImage","beerAbv","className","src","alt","CardList","CardListJSX","beerArr","map","beer","image_url","name","abv","id","App","useState","setBeerArr","useEffect","fetch","then","response","json","beerList","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAkBeA,EAhBF,SAACC,GACV,IAAOC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,UAAWC,EAAWH,EAAXG,QAE9B,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,iBAAiBC,IAAKH,EAAWI,IAAKL,IACvD,sBAAKG,UAAU,mBAAf,UACI,mBAAGA,UAAU,wBAAb,SAAsCH,IACtC,mBAAGG,UAAU,uBAAb,SAAqCD,aCKlCI,EAZE,SAACP,GACd,IAIMQ,EAJcR,EAAZS,QAIoBC,KAAI,SAAAC,GAAI,OAC9B,cAAC,EAAD,CAAoBT,UAAWS,EAAKC,UAAYX,SAAUU,EAAKE,KAAOV,QAASQ,EAAKG,KAAzEH,EAAKI,OAGpB,OAAO,mCAAGP,KCwBDQ,EAhCH,WACR,MAA8BC,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBS,EAAhB,KA0BA,OAxBAC,qBAAU,WAENC,MADS,qCAEJC,MAAK,SAAAC,GACN,OAAOA,EAASC,UACjBF,MAAK,SAACG,GACLN,EAAWM,GACXC,QAAQC,IAAIF,QAEjB,IAeI,cAAC,EAAD,CAAUf,QAASA,KCpBfkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.267486a4.chunk.js","sourcesContent":["import \"./Card.scss\"\n\nconst Card = (props) => {\n    const {beerName, beerImage, beerAbv} = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-info\">\n          <img className=\"card-info__img\" src={beerImage} alt={beerName} />\n        <div className=\"card-info__stats\">\n            <p className=\"card-info__stats-name\">{beerName}</p>\n            <p className=\"card-info__stats-abv\">{beerAbv}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","import React from \"react\";\nimport Card from \"../Card/Card\";\n\n\nconst CardList = (props) => {\n    const { beerArr } = props;\n\n    // const frontBeerArr= beerArr.map(beer => album.strAlbumThumb);\n\n    const CardListJSX = beerArr.map(beer => (\n          <Card key={beer.id} beerImage={beer.image_url}  beerName={beer.name}  beerAbv={beer.abv} />\n      ))\n\n      return <>{CardListJSX}</>\n}\n\nexport default CardList","import React, {useState, useEffect} from \"react\";\nimport './App.scss';\nimport CardList from \"./Components/CardList/CardList\";\n\n\nconst App = () => {\n    const [beerArr, setBeerArr] = useState([])\n\n    useEffect(() => {\n        const URL = `https://api.punkapi.com/v2/beers/`\n        fetch(URL)\n            .then(response => {\n            return response.json();\n        }).then((beerList) => {\n            setBeerArr(beerList);\n            console.log(beerList);\n        });\n    }, []);\n\n    // const highAbvBeer = beers\n    // .filter(beer => beer.abv > 6)\n    // .sort((a, b) => b.abv - a.abv);\n\n    // const classicBeer = beers\n    // .filter(beer => beer.first_brewed < 1)\n    // .sort((a, b) => b.abv - a.abv);\n\n    // console.log(highAbvBeer);\n\n\n\n\n    return <CardList beerArr={beerArr}/>;\n}\n\n// console.log(CardListJSX());\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}